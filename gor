#!/usr/bin/env zsh

# Golang executor that works with Go's official version management installers.
# Favors Mage for scripts management.
# Supports executing scoped binaries with gomodrun directly for tools stored in root/tools/
#
# Usage:
#   gor mod download
#   gor my-file.go
#   gor mymagescript
#   gor my-local-binary
#   gor --help

set -e

function walkuptree() {
  local DIR=$(pwd)
  while [ ! -z "$DIR" ] && [ ! -f "$DIR/$1" ]; do
    DIR="${DIR%\/*}"
  done

  echo "$DIR/$1"
}

if [[ "$1 $2" == "mod init" ]]; then
  go "$@"
  exit 0
fi

GO_MOD=`walkuptree go.mod`
GO_TOOLS=`walkuptree tools/tools.go`
GO_MAGE=`walkuptree go.magefile.go`
GO_VERSION=`cat $GO_MOD | grep 'go ' | head -n 1 | awk '{print $2}'`

# If Go is not setup in path correctly, set it here.
GOBINPATH="$(go env GOPATH)/bin"
if ! (echo "$PATH" | grep -q "$GOBINPATH"); then
  export PATH="$GOBINPATH:$PATH"
fi

# Install GoModRun if not installed.
if ! (which gomodrun 2>&1 >/dev/null); then
  >&2 echo "[gor] Installing GoModRun"
  go install github.com/dustinblackman/gomodrun/cmd/gomodrun@master
fi

# Download Go version installer
if ! (which "go${GO_VERSION}" 2>&1 >/dev/null); then
  >&2 echo "[gor] Preparing Go version ${GO_VERSION}"
  go install "golang.org/dl/go${GO_VERSION}@latest"
fi

# Download Go version
if ! ("go${GO_VERSION}" --help 2>&1 | grep -q 'Go is a tool'); then
  >&2 echo "[gor] Installing Go version ${GO_VERSION}"
  "go${GO_VERSION}" download
fi

# Put the correct Go version at the top of the path.
VERSIONEDGOROOT=$("go${GO_VERSION}" env GOROOT)
export PATH="$VERSIONEDGOROOT/bin:$PATH"
export GOROOT="$VERSIONEDGOROOT"

gocmd=""
cleanedparam="$(echo $1 | tr -dc '[:alpha:]' | awk '{print tolower($1)}')"

if [[ "$1" == *.go ]]; then
  gocmd="go run $@"
elif [[ "$1" == "--tidy" ]]; then
  gocmd="gomodrun -r tools --tidy"
elif [[ "$1" == "gofmt" ]]; then
  gocmd="gofmt"
elif ((cat $GO_MAGE || echo '') 2>/dev/null | grep '^func ' | awk -F '(' '{print $1}' | awk '{print $2}' | grep '^[A-Z]' | awk '{print tolower($1)}' | grep -q "^$cleanedparam$"); then
  shift;
  gocmd="gomodrun -r tools mage $cleanedparam $@"
elif ((cat $GO_TOOLS || echo '') 2>/dev/null | grep '_ "' | awk -F '"' '{print $2}' | awk -F '/' '{print $3}' | grep -q "$1"); then
  gocmd="gomodrun -r tools $@"
else
  gocmd="go $@"
fi

# Support passing in stdin.
if [ ! -t 0 ]; then
  gocmd="cat - | $gocmd"
fi

eval "$gocmd"
